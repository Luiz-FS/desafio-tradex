# Generated by Django 4.1.2 on 2022-11-12 02:47

from django.db import migrations
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ('product_cost', '0002_productcost_cost__gte_min_cost_and__lte_max_cost'),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name='productcost',
            name='cost__gte_min_cost_and__lte_max_cost',
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='productcost',
            trigger=pgtrigger.compiler.Trigger(name='cost__gte_min_cost_and__lte_max_cost', sql=pgtrigger.compiler.UpsertTriggerSql(declare='DECLARE product_min_cost NUMERIC(8,2); product_max_cost NUMERIC(8,2);', func="\n                    IF (new.cost IS NULL) THEN\n                        RETURN NEW;\n                    END IF;\n\n                    SELECT min_cost, max_cost INTO product_min_cost, product_max_cost FROM product_product WHERE id = NEW.product_id;\n\n                    IF (NOT FOUND) THEN\n                        SELECT min_cost, max_cost INTO product_min_cost, product_max_cost FROM product_product WHERE id = OLD.product_id;\n                    END IF;\n\n                    IF (NEW.cost >= product_min_cost AND  NEW.cost <= product_max_cost) THEN\n                        RETURN NEW;\n                    ELSE\n                        RAISE check_violation USING MESSAGE = 'Cost must be greater than product min cost and less than product max cost.';\n                    END IF;\n                ", hash='fcdbc0d59097b2f6363c0ab226b14b8cecacbc19', operation='INSERT OR UPDATE', pgid='pgtrigger_cost__gte_min_cost_and__lte_max_cost_31a97', table='product_cost_productcost', when='BEFORE')),
        ),
    ]
